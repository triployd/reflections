What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?


tips:
git diff Revised is important:
1.修改文件
2.git status显示什么文件修改了
3.git diff看修改了什么地方
4.git add文件到staging area
5.git diff ——staged（double dash）比较repository和staging area
6.git reset ——hard(double dash)把改过得没有add到staging area还原not reversible

7.git branch easy-mode
git checkout easy-mode这两行就可以开始easy-mode branch了
8.The full command Caroline types to see the visual representation of the commit history is git log --graph --oneline master coins: git log只显示一行一行并排这样更容易看
9.git checkout -b new_branch_name：在某一个commit上做了修改并且想保存可以访问branch就这样

10. merging files! if rachel add A it should contain A, but if jake deleted A then it shouldn’t contain A 使劲理解概念回忆
11. git show commit_id：看这个commit从parent改了什么
12. git branch -d coins只会删除label
13. 